/* eslint-disable @typescript-eslint/no-unused-vars */
"use client";
import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { Shield, Activity, CheckCircle, AlertTriangle, Smartphone, Lock, Code, Key, WifiOff, Database } from 'lucide-react';
import CyberJallFAQ from '@/app/components/FAQ';
import { useRouter } from 'next/navigation';

export default function MobileAppPenTest() {
  const [isClient, setIsClient] = useState(false);
  const router = useRouter();
  
  useEffect(() => {
    setIsClient(true);
  }, []);

  const fadeIn = {
    hidden: { opacity: 0, y: 20 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.6 }
    }
  };

  const staggerChildren = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };

  const plans = [
    {
      title: "Basic Security Assessment",
      price: "$1,999",
      duration: "One-time test",
      features: [
        "Static & dynamic analysis (SAST/DAST)",
        "OWASP Mobile Top 10 checklist",
        "API communication testing",
        "Data storage & encryption review",
        "Code obfuscation check (basic)",
        "Report with prioritized remediation"
      ],
      includes: [
        "Optional retest at discounted rate",
        "Free Membership of CyberJall Insights"
      ],
      icon: <Shield className="h-12 w-12" />,
      popular: false
    },
    {
      title: "Advanced Protection",
      price: "$4,999",
      duration: "Quarterly tests",
      features: [
        "One complete mobile app test every 4 months",
        "Threat modeling (STRIDE)",
        "Secure authentication/session flow testing",
        "Business logic flaw detection",
        "Network traffic analysis (SSL pinning)",
        "Code obfuscation & reverse engineering",
        "Risk heatmap + remediation tracking"
      ],
      includes: [
        "One free retest included per assessment",
        "Free Membership of CyberJall Insights"
      ],
      icon: <Lock className="h-12 w-12" />,
      popular: true
    },
    {
      title: "Enterprise Shield",
      price: "$8,999",
      duration: "Annual package",
      features: [
        "Four mobile app security tests/year",
        "CI/CD integration for regular scans",
        "Secure development lifecycle (SDLC)",
        "API fuzzing & backend testing",
        "Jailbreak/root detection bypass testing",
        "Continuous vulnerability dashboard",
        "Mobile compliance checks"
      ],
      includes: [
        "Retest after every remediation",
        "24/7 priority support",
        "Free Membership of CyberJall Insights"
      ],
      icon: <Smartphone className="h-12 w-12" />,
      popular: false
    }
  ];

  const whatWeTest = [
    {
      title: "Insecure Data Storage",
      description: "Identifying vulnerabilities in how your app stores sensitive data locally.",
      icon: <Database className="h-8 w-8" />
    },
    {
      title: "Authentication Flaws",
      description: "Testing for weak authentication mechanisms and session management.",
      icon: <Key className="h-8 w-8" />
    },
    {
      title: "Code Injection",
      description: "Checking for SQLi, XSS and other injection vulnerabilities.",
      icon: <Code className="h-8 w-8" />
    },
    {
      title: "Reverse Engineering",
      description: "Assessing how easily your app can be decompiled and analyzed.",
      icon: <WifiOff className="h-8 w-8" />
    },
    {
      title: "Cryptography Issues",
      description: "Reviewing encryption implementations for weaknesses.",
      icon: <Lock className="h-8 w-8" />
    },
    {
      title: "Platform Misconfigurations",
      description: "Checking iOS/Android-specific security settings.",
      icon: <Smartphone className="h-8 w-8" />
    }
  ];

  const deliverables = [
    "Comprehensive vulnerability report",
    "Risk-based impact assessment",
    "Detailed remediation guidelines",
    "Optional retesting after fixes",
    "Executive summary for management",
    "Technical deep-dive for developers"
  ];

  const benefits = [
    "Secure sensitive customer data",
    "Prevent app-based fraud and exploits",
    "Meet compliance standards like OWASP MASVS",
    "Gain user trust and app store credibility",
    "Reduce risk of data breaches",
    "Improve overall app security posture"
  ];

  const howItWorks = [
    {
      title: "Learn About Mobile App Security",
      description: "Understand how penetration testing protects your mobile applications from cyber threats.",
      icon: <Activity className="h-8 w-8" />
    },
    {
      title: "Explore Security Providers",
      description: "Browse expert mobile security professionals specializing in iOS and Android testing.",
      icon: <Shield className="h-8 w-8" />
    },
    {
      title: "Select Your Testing Package",
      description: "Choose between one-time tests or ongoing security monitoring for your apps.",
      icon: <CheckCircle className="h-8 w-8" />
    },
    {
      title: "Receive Your Security Report",
      description: "Get detailed findings with prioritized remediation steps to secure your app.",
      icon: <AlertTriangle className="h-8 w-8" />
    }
  ];

  return (
    <div id="consultation" className="min-h-screen bg-black text-white">
      {isClient && (
        <>
          <div className="relative overflow-hidden">
            <div className="absolute inset-0 z-0">
              <div className="absolute inset-0 bg-gradient-to-br from-black via-gray-900 to-black opacity-90"></div>
              <div className="absolute top-0 left-0 w-full h-full">
                {[...Array(20)].map((_, i) => (
                  <motion.div
                    key={i}
                    className="absolute rounded-full bg-red-500 opacity-20"
                    style={{
                      top: `${Math.random() * 100}%`,
                      left: `${Math.random() * 100}%`,
                      width: `${Math.random() * 300}px`,
                      height: `${Math.random() * 300}px`,
                    }}
                    animate={{
                      x: [0, Math.random() * 50 - 25],
                      y: [0, Math.random() * 50 - 25],
                    }}
                    transition={{
                      repeat: Infinity,
                      repeatType: "reverse",
                      duration: 10 + Math.random() * 20,
                    }}
                  />
                ))}
              </div>
            </div>

            <div className="container mx-auto px-6 py-24 relative z-10">
              <motion.div
                initial="hidden"
                animate="visible"
                variants={fadeIn}
                className="text-center max-w-4xl mx-auto"
              >
                <motion.h1 
                  className="text-5xl md:text-6xl font-bold mb-6 text-transparent bg-clip-text bg-gradient-to-r from-red-600 via-orange-400 to-red-600"
                  animate={{ 
                    backgroundPosition: ['0% 50%', '100% 50%', '0% 50%'] 
                  }}
                  transition={{ 
                    duration: 15, 
                    repeat: Infinity, 
                    ease: "linear" 
                  }}
                  style={{ backgroundSize: '200% auto' }}
                >
                  Mobile App Penetration Testing
                </motion.h1>
                <motion.p className="text-xl md:text-2xl mb-8 text-gray-300">
                  Secure Your Mobile App Before Attackers Do
                </motion.p>
                <motion.p className="text-lg md:text-xl mb-12 text-gray-400">
                  Identify, assess, and eliminate vulnerabilities across Android & iOS platforms with expert-led mobile app penetration testing.
                </motion.p>
                <motion.button
                  className="bg-gradient-to-r from-red-700 to-orange-900 text-white font-bold py-3 px-8 rounded-full hover:shadow-lg hover:shadow-red-900/50 transition duration-300"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  Schedule Free Consultation
                </motion.button>
              </motion.div>
            </div>
          </div>

          <div className="bg-gradient-to-b from-black to-gray-900">
            <div className="container mx-auto px-6 py-16">
              <motion.div
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, margin: "-100px" }}
                variants={fadeIn}
                className="max-w-4xl mx-auto mb-16 text-center"
              >
                <p className="text-red-500 text-lg font-semibold mb-3">CYBERJALL SERVICES</p>
                <h2 className="text-4xl font-bold mb-6">Mobile App Security Overview</h2>
                <p className="text-gray-400 text-lg">
                  Mobile applications are often the frontline of digital engagement, but they&apos;re also prime targets for cyberattacks. 
                  Our Mobile Application Penetration Testing service helps uncover security flaws across Android and iOS platforms, 
                  ensuring your app meets the highest security standards before reaching users.
                </p>
              </motion.div>

              <motion.div
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, margin: "-100px" }}
                variants={staggerChildren}
                className="mb-24"
              >
                <div className="text-center mb-12">
                  <motion.h2 variants={fadeIn} className="text-3xl font-bold mb-4">Why Mobile App Security Matters</motion.h2>
                  <motion.div variants={fadeIn} className="w-24 h-1 bg-gradient-to-r from-red-600 to-orange-500 mx-auto"></motion.div>
                </div>
                
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                  {[
                    {
                      title: "Data Protection",
                      description: "Mobile apps handle sensitive user data daily — from payments to personal information.",
                      icon: <Database className="h-12 w-12 text-red-500" />
                    },
                    {
                      title: "Risk Mitigation",
                      description: "Vulnerabilities can lead to data breaches, reputation damage, or compliance violations.",
                      icon: <AlertTriangle className="h-12 w-12 text-orange-500" />
                    },
                    {
                      title: "Expert Partners",
                      description: "CyberJall connects you with vetted cybersecurity partners who specialize in mobile app security.",
                      icon: <Shield className="h-12 w-12 text-red-500" />
                    }
                  ].map((service, index) => (
                    <motion.div
                      key={index}
                      variants={fadeIn}
                      className="bg-gradient-to-br from-gray-900 to-gray-800 p-8 rounded-xl border border-gray-800 hover:border-red-500/30 transition-all duration-300 hover:shadow-lg hover:shadow-red-900/30"
                    >
                      <div className="mb-6">
                        {service.icon}
                      </div>
                      <h3 className="text-xl font-bold mb-3">{service.title}</h3>
                      <p className="text-gray-400">{service.description}</p>
                    </motion.div>
                  ))}
                </div>
              </motion.div>

              <motion.div
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, margin: "-100px" }}
                variants={staggerChildren}
                className="mb-24"
              >
                <div className="text-center mb-12">
                  <motion.h2 variants={fadeIn} className="text-3xl font-bold mb-4">What We Test</motion.h2>
                  <motion.div variants={fadeIn} className="w-24 h-1 bg-gradient-to-r from-red-600 to-orange-500 mx-auto"></motion.div>
                </div>
                
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {whatWeTest.map((item, index) => (
                    <motion.div
                      key={index}
                      variants={fadeIn}
                      className="flex items-start gap-4 bg-gray-900/50 p-6 rounded-lg border border-gray-800 hover:border-red-500/30 transition-all"
                    >
                      <div className="bg-red-900/50 p-3 rounded-full">
                        {item.icon}
                      </div>
                      <div>
                        <h3 className="text-lg font-bold mb-1">{item.title}</h3>
                        <p className="text-gray-400 text-sm">{item.description}</p>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </motion.div>

              <motion.div
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, margin: "-100px" }}
                variants={staggerChildren}
                className="mb-24"
              >
                <div className="text-center mb-12">
                  <motion.h2 variants={fadeIn} className="text-3xl font-bold mb-4">How It Works</motion.h2>
                  <motion.div variants={fadeIn} className="w-24 h-1 bg-gradient-to-r from-red-600 to-orange-500 mx-auto"></motion.div>
                </div>
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-8 lg:gap-12">
                  {howItWorks.map((step, index) => (
                    <motion.div
                      key={index}
                      variants={fadeIn}
                      className="flex gap-6 items-start"
                    >
                      <div className="relative flex-shrink-0">
                        <div className="w-16 h-16 rounded-full bg-gradient-to-br from-red-700 to-orange-900 flex items-center justify-center">
                          {step.icon}
                        </div>
                        {index < howItWorks.length - 1 && (
                          <div className="absolute top-16 left-1/2 w-0.5 h-16 bg-gradient-to-b from-orange-500 to-transparent -translate-x-1/2 md:hidden"></div>
                        )}
                      </div>
                      <div>
                        <h3 className="text-xl font-bold mb-2 flex items-center">
                          <span className="text-orange-500 mr-2">{index + 1})</span>
                          {step.title}
                        </h3>
                        <p className="text-gray-400">{step.description}</p>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </motion.div>

              <motion.div
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, margin: "-100px" }}
                variants={staggerChildren}
                className="mb-16"
              >
                <div className="text-center mb-12">
                  <motion.h2 variants={fadeIn} className="text-3xl font-bold mb-4">Key Benefits</motion.h2>
                  <motion.div variants={fadeIn} className="w-24 h-1 bg-gradient-to-r from-red-600 to-orange-500 mx-auto"></motion.div>
                </div>
                
                <div className="max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6">
                  {benefits.map((benefit, index) => (
                    <motion.div
                      key={index}
                      variants={fadeIn}
                      className="flex items-start gap-3"
                    >
                      <CheckCircle className="h-6 w-6 text-green-500 mt-0.5 flex-shrink-0" />
                      <p className="text-gray-300">{benefit}</p>
                    </motion.div>
                  ))}
                </div>
              </motion.div>

<motion.div
  initial="hidden"
  whileInView="visible"
  viewport={{ once: true, margin: "-100px" }}
  variants={staggerChildren}
  className="mb-24"
>
  <div className="text-center mb-12">
    <motion.h2 variants={fadeIn} className="text-3xl font-bold mb-4">Comprehensive Deliverables</motion.h2>
    <motion.div variants={fadeIn} className="w-24 h-1 bg-gradient-to-r from-red-600 to-orange-500 mx-auto"></motion.div>
  </div>
  
  <div className="relative">
    {/* Animated background elements */}
    <motion.div 
      className="absolute -top-20 -left-20 w-40 h-40 rounded-full bg-red-900/20 blur-xl"
      animate={{
        scale: [1, 1.2, 1],
        opacity: [0.2, 0.4, 0.2]
      }}
      transition={{
        duration: 8,
        repeat: Infinity,
        ease: "easeInOut"
      }}
    />
    <motion.div 
      className="absolute -bottom-10 -right-10 w-64 h-64 rounded-full bg-orange-900/10 blur-xl"
      animate={{
        scale: [1, 1.3, 1],
        opacity: [0.1, 0.3, 0.1]
      }}
      transition={{
        duration: 10,
        repeat: Infinity,
        ease: "easeInOut"
      }}
    />
    
    <div className="grid grid-cols-1 md:grid-cols-2 gap-8 relative z-10">
      {/* Left column with animated illustration */}
      <motion.div
        variants={fadeIn}
        className="bg-gradient-to-br from-gray-900 to-gray-800 rounded-2xl p-8 border border-gray-800 flex flex-col items-center justify-center"
      >
        <div className="relative w-full max-w-md h-64 mb-6">
          {/* Animated document illustration */}
          <motion.div 
            className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 w-48 h-64 bg-gray-800 rounded-lg shadow-lg border border-gray-700"
            whileHover={{ rotate: -2 }}
          >
            <div className="absolute top-0 left-0 w-full h-8 bg-gray-700 rounded-t-lg flex items-center px-3">
              <div className="w-2 h-2 rounded-full bg-red-500 mr-2"></div>
              <div className="w-2 h-2 rounded-full bg-orange-500 mr-2"></div>
              <div className="w-2 h-2 rounded-full bg-green-500"></div>
            </div>
            <div className="p-4">
              <div className="h-4 bg-gray-700 rounded mb-3"></div>
              <div className="h-4 bg-gray-700 rounded mb-3 w-3/4"></div>
              <div className="h-4 bg-gray-700 rounded mb-3 w-1/2"></div>
              <div className="h-4 bg-gray-700 rounded mb-3"></div>
              <div className="h-4 bg-gray-700 rounded mb-3 w-5/6"></div>
            </div>
            <motion.div 
              className="absolute -bottom-4 -right-4 w-16 h-16 bg-red-600 rounded-lg shadow-lg flex items-center justify-center"
              animate={{ 
                rotate: [0, 5, -5, 0],
                y: [0, -5, 0]
              }}
              transition={{
                duration: 4,
                repeat: Infinity,
                ease: "easeInOut"
              }}
            >
              <CheckCircle className="h-8 w-8 text-white" />
            </motion.div>
          </motion.div>
          
          {/* Floating elements around the document */}
          <motion.div 
            className="absolute top-0 left-8 w-12 h-12 bg-orange-600/30 rounded-lg shadow-lg"
            animate={{
              y: [0, -10, 0],
              rotate: [0, 5, 0]
            }}
            transition={{
              duration: 6,
              repeat: Infinity,
              ease: "easeInOut",
              delay: 0.5
            }}
          />
          <motion.div 
            className="absolute bottom-4 right-0 w-8 h-8 bg-red-600/30 rounded-full shadow-lg"
            animate={{
              y: [0, 10, 0],
              scale: [1, 1.2, 1]
            }}
            transition={{
              duration: 5,
              repeat: Infinity,
              ease: "easeInOut",
              delay: 1
            }}
          />
        </div>
        <h3 className="text-xl font-bold mb-2 text-center">Detailed Reporting</h3>
        <p className="text-gray-400 text-center">
          Our reports combine technical depth with executive summaries, providing clear action items for all stakeholders.
        </p>
      </motion.div>
      
      {/* Right column with deliverables list */}
      <motion.div
        variants={fadeIn}
        className="bg-gradient-to-br from-gray-900 to-gray-800 rounded-2xl p-8 border border-gray-800"
      >
        <h3 className="text-xl font-bold mb-6 flex items-center">
          <Shield className="h-6 w-6 text-red-500 mr-2" />
          What You&apos;ll Receive
        </h3>
        <ul className="space-y-4">
          {deliverables.map((item, index) => (
            <motion.li
              key={index}
              className="flex items-start"
              whileHover={{ x: 5 }}
              transition={{ type: "spring", stiffness: 300 }}
            >
              <div className="flex-shrink-0 mt-1">
                <motion.div
                  className="w-6 h-6 rounded-full bg-gradient-to-br from-red-600 to-orange-500 flex items-center justify-center"
                  animate={{ 
                    rotate: [0, 10, -10, 0],
                    scale: [1, 1.1, 1]
                  }}
                  transition={{
                    duration: 2,
                    repeat: Infinity,
                    repeatDelay: 3
                  }}
                >
                  <CheckCircle className="h-4 w-4 text-white" />
                </motion.div>
              </div>
              <span className="ml-3 text-gray-300">{item}</span>
            </motion.li>
          ))}
        </ul>
        
        {/* Animated callout */}
        <motion.div 
          className="mt-8 p-4 bg-gray-800/50 rounded-lg border-l-4 border-red-500"
          initial={{ opacity: 0, x: 20 }}
          whileInView={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.5 }}
          viewport={{ once: true }}
        >
          <div className="flex items-start">
            <AlertTriangle className="h-5 w-5 text-orange-400 flex-shrink-0 mt-0.5" />
            <p className="ml-2 text-sm text-gray-300">
              <span className="font-semibold text-orange-400">Optional Retesting:</span> After implementing fixes, we can verify the effectiveness of your remediation efforts.
            </p>
          </div>
        </motion.div>
      </motion.div>
    </div>
  </div>
</motion.div>

              <motion.div
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true, margin: "-100px" }}
                variants={staggerChildren}
              >
                <div className="text-center mb-12">
                  <motion.h2 variants={fadeIn} className="text-3xl font-bold mb-4">Mobile Penetration Testing Packages</motion.h2>
                  <motion.p variants={fadeIn} className="text-gray-400 text-lg max-w-3xl mx-auto">
                    Comprehensive security testing tailored for iOS and Android applications at every stage of development.
                  </motion.p>
                  <motion.div variants={fadeIn} className="w-24 h-1 bg-gradient-to-r from-red-600 to-orange-500 mx-auto mt-6"></motion.div>
                </div>
                
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                  {plans.map((plan, index) => (
                    <motion.div
                      key={index}
                      variants={fadeIn}
                      className={`bg-gradient-to-br from-gray-900 to-gray-800 rounded-xl overflow-hidden transition-all duration-300 ${
                        plan.popular ? 'border-2 border-red-600 relative' : 'border border-gray-800'
                      }`}
                    >
                      {plan.popular && (
                        <div className="absolute top-0 right-0">
                          <div className="bg-red-500 text-white px-4 py-1 text-sm font-bold">
                            MOST POPULAR
                          </div>
                        </div>
                      )}
                      <div className="p-8">
                        <div className="mb-6 text-center">
                          <div className={`w-20 h-20 rounded-full mx-auto mb-4 flex items-center justify-center ${
                            plan.popular ? 'bg-gradient-to-br from-red-600 to-orange-500' : 'bg-gray-800'
                          }`}>
                            {plan.icon}
                          </div>
                          <h3 className="text-xl font-bold mb-1">{plan.title}</h3>
                          <p className="text-gray-400 text-sm">{plan.duration}</p>
                        </div>
                        <ul className="space-y-3 mb-6">
                          {plan.features.map((feature, i) => (
                            <li key={i} className="flex items-start">
                              <CheckCircle className="h-5 w-5 text-green-500 mr-2 flex-shrink-0 mt-0.5" />
                              <span className="text-gray-300">{feature}</span>
                            </li>
                          ))}
                        </ul>
                        <div className="bg-gray-800/50 p-4 rounded-lg mb-6">
                          <h4 className="text-orange-400 font-semibold mb-2">Includes:</h4>
                          <ul className="space-y-2">
                            {plan.includes.map((item, i) => (
                              <li key={i} className="flex items-start">
                                <span className="text-red-400 mr-2">•</span>
                                <span className="text-gray-300 text-sm">{item}</span>
                              </li>
                            ))}
                          </ul>
                        </div>
                        <motion.button
                          whileHover={{ scale: 1.03 }}
                          whileTap={{ scale: 0.98 }}
                          className={`w-full py-3 px-4 rounded-lg font-semibold transition ${
                            plan.popular 
                              ? 'bg-gradient-to-r from-red-700 to-orange-900 text-white' 
                              : 'bg-gray-800 text-white border border-gray-700 hover:border-red-500'
                          }`}
                        >
                          Get Started
                        </motion.button>
                      </div>
                    </motion.div>
                  ))}
                </div>
                
                <motion.div 
                  variants={fadeIn}
                  className="mt-12 text-center"
                >
                  <motion.button
                    className="bg-transparent border-2 border-red-500 text-red-500 font-bold py-3 px-8 rounded-full hover:bg-red-500 hover:text-white transition duration-300"
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    onClick={()=>router.push("/cyberrequirements")}
                  >
                    Request Mobile App Security Assessment
                  </motion.button>
                </motion.div>
              </motion.div>
            </div>
          </div>

          <div className="bg-black relative overflow-hidden">
            <div className="absolute inset-0 z-0">
              <motion.div 
                className="absolute inset-0"
                animate={{ 
                  background: [
                    'radial-gradient(circle at 20% 50%, rgba(220, 38, 38, 0.25) 0%, rgba(0, 0, 0, 0) 50%)',
                    'radial-gradient(circle at 80% 50%, rgba(220, 38, 38, 0.25) 0%, rgba(0, 0, 0, 0) 50%)',
                    'radial-gradient(circle at 20% 50%, rgba(220, 38, 38, 0.25) 0%, rgba(0, 0, 0, 0) 50%)'
                  ] 
                }}
                transition={{ duration: 15, repeat: Infinity, ease: "easeInOut" }}
              />
            </div>
            <CyberJallFAQ/>

            <div className="container mx-auto px-6 py-16 relative z-10">
              <motion.div
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true }}
                variants={fadeIn}
                className="max-w-3xl mx-auto text-center"
              >
                <h2 className="text-3xl md:text-4xl font-bold mb-6">Ready to secure your mobile applications?</h2>
                <p className="text-xl text-gray-400 mb-8">
                  Protect your iOS and Android apps with professional penetration testing services.
                </p>
                <motion.button
                  className="bg-gradient-to-r from-red-600 to-orange-500 text-white font-bold py-4 px-10 rounded-full hover:shadow-lg hover:shadow-red-500/30 transition duration-300"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  Contact Us Today
                </motion.button>
              </motion.div>
            </div>
          </div>
        </>
      )}
    </div>
  );
}